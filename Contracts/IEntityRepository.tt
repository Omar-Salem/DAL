<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
<#
var loader = new MetadataLoader(this);
var region = new CodeRegion(this);
//string inputFile = @"..\DAL\Model.edmx";
DirectoryInfo dir = new DirectoryInfo(Host.ResolvePath(string.Empty));
string[] entityFrameworkFiles = Directory.GetFiles(dir.Parent.FullName, "*.edmx", SearchOption.AllDirectories);
var inputFile = entityFrameworkFiles.Length == 1 ? entityFrameworkFiles[0] : "";


var ItemCollection = loader.CreateEdmItemCollection(inputFile);

Code = new CodeGenerationTools(this);
EFTools = new MetadataTools(this);
ObjectNamespace = Code.VsNamespaceSuggestion();
ModelNamespace = "DAL";
ModelName = loader.GetModelNamespace(inputFile);
EntityContainer container = ItemCollection.GetItems<EntityContainer>().FirstOrDefault();
if (container == null)
{
    return string.Empty;
}
#>
namespace DAL
{
    using System;
	using Entities;
<# 
    foreach (var entitySet in container.BaseEntitySets.OfType<EntitySet>())
    {
	    var elementName = Code.Escape(entitySet.ElementType);
        var interfaceName = char.ToUpper(elementName[0]) + elementName.Substring(1);
#>

    public partial interface I<#=interfaceName#>Repository : IGenericRepository<<#=Code.Escape(container)#>,<#=Code.Escape(entitySet.ElementType)#>>
    {
    }
<# 
    }
#>
}
<#+
string ModelNamespace { get; set; }
string ModelName { get; set; }
string ObjectNamespace { get; set; }
CodeGenerationTools Code { get; set; }
MetadataTools EFTools { get; set; }
#>


