<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#>
<#@ output extension=".cs"#>
<#
var loader = new MetadataLoader(this);
var region = new CodeRegion(this);
var inputFile = @"..\DAL\Model.edmx";
var ItemCollection = loader.CreateEdmItemCollection(inputFile);
Code = new CodeGenerationTools(this);
EFTools = new MetadataTools(this);
ObjectNamespace = Code.VsNamespaceSuggestion();
ModelNamespace = loader.GetModelNamespace(inputFile);
EntityContainer container = ItemCollection.GetItems<EntityContainer>().FirstOrDefault();
if (container == null)
{
    return string.Empty;
}
#>
namespace DAL
{
    using System.ComponentModel.Composition;
    using Entities;
<# 
    foreach (var entitySet in container.BaseEntitySets.OfType<EntitySet>())
    {
#>

    [Export(typeof(I<#=Code.Escape(entitySet.ElementType)#>Repository)), PartCreationPolicy(CreationPolicy.NonShared)]
    public partial class <#=Code.Escape(entitySet.ElementType)#>Repository : GenericRepository<<#=Code.Escape(entitySet.ElementType)#>>, I<#=Code.Escape(entitySet.ElementType)#>Repository
    {
        [ImportingConstructor]
        public <#=Code.Escape(entitySet.ElementType)#>Repository(<#=Code.Escape(container)#> context)
            : base(context)
        {
        }        
    }
<# 
    }
#>
}
<#+
string ModelNamespace { get; set; }
string ObjectNamespace { get; set; }
CodeGenerationTools Code { get; set; }
MetadataTools EFTools { get; set; }
#>


